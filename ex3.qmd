---
title: "ex3"
format: html

---

## Tasks and Inputs

```{r}
library(readr)
library(dplyr)
library(ggplot2)

wildschwein <- read_csv("data/wildschwein_BE_2056.csv")

sabi <- wildschwein |> 
  filter(TierName =="Sabi") |> 
  filter(DatetimeUTC >= as.POSIXct("2015-07-01", tz = "UTC"), 
         DatetimeUTC < as.POSIXct("2015-07-03", tz = "UTC"))

ggplot(sabi, aes(E, N, color = DatetimeUTC)) +
  geom_point() +
  geom_path() +
  coord_equal()

sabi |> 
  head(50) |> 
  ggplot(aes(DatetimeUTC, 1)) +
  geom_point()

sabi <- sabi |> 
  mutate(
    n_plus1 = sqrt((lead(X) - X)^2 + (lead(Y) - N)^2),
    n_plus2 = sqrt((lead(X, 2) - X)^2 + (lead(Y, 2) - N)^2),
    n_minus1 = sqrt((lag(X) - X)^2 + (lag(Y) - N)^2),
    n_minus2 = sqrt((lag(X, 2) - X)^2 + (lag(Y, 2) - N)^2)
  )

sabi <- sabi |> 
  rowwise() |> 
  mutate(
    stepMean = mean(c(n_minus1, n_minus2, n_plus1, n_plus2))
  ) |> 
  ungroup()


ggplot(sabi, aes(stepMean)) +
  geom_histogram(binwidth = 10) +
  geom_vline(xintercept = mean(sabi$stepMean, na.rm = TRUE))

sabi <- sabi |> 
  mutate(static = stepMean < mean(stepMean, na.rm = TRUE))

sabi_filter <- sabi |>
    filter(!static)

sabi_filter |>
    ggplot(aes(E, N)) +
    geom_path() +
    geom_point() +
    coord_fixed() +
    theme(legend.position = "bottom")

```

## Prepration (1 red deer individual, sampling interval = 1h, in May and June)

```{r}
library(readr)
library(dplyr)
library(ggplot2)
library(sf)
library(lubridate)
library(mapview)
library(forcats)


rm(list=ls())

rd_orig <- read_csv("data/rd_rid_zhaw2.csv")

rd_wgs84 <- rd_orig |> 
  filter(ID ==20211) |> 
  rename(datetime = acquisition_time) |> 
  select(datetime, longitude, latitude)

rd_lv95 <- rd_wgs84 |> 
  st_as_sf(coords = c("longitude","latitude"), crs = 4326) |>
  st_transform(2056)

head(rd_lv95)

rd_coord <- st_coordinates(rd_lv95)

rd_lv95 <- cbind(rd_lv95, rd_coord)

rd <- rd_lv95 |> 
  filter(month(datetime) %in% c(5, 6))

```

## Task 1

```{r}
ggplot(rd, aes(X, Y, colour = datetime)) +
  geom_point() +
  geom_path() +
  coord_equal()

rd |> 
  head(50) |> 
  ggplot(aes(datetime, 1)) +
  geom_point()

rd <- rd |> 
  mutate(
    n_plus1 = sqrt((lead(X) - X)^2 + (lead(Y) - Y)^2),
    n_plus2 = sqrt((lead(X, 2) - X)^2 + (lead(Y, 2) - Y)^2),
    n_minus1 = sqrt((lag(X) - X)^2 + (lag(Y) - Y)^2),
    n_minus2 = sqrt((lag(X, 2) - X)^2 + (lag(Y, 2) - Y)^2)
  )

```

## Task 2

```{r}
rd <- rd |> 
  rowwise() |> 
  mutate(
    stepMean = mean(c(n_minus1, n_minus2, n_plus1, n_plus2))
  ) |> 
  ungroup()

ggplot(rd, aes(stepMean)) +
  geom_histogram(binwidth = 10) +
  geom_vline(xintercept = mean(rd$stepMean, na.rm = TRUE))

ggplot(rd, aes(stepMean)) +
  geom_boxplot()

summary(rd$stepMean)

rd <- rd |> 
  mutate(static = stepMean < mean(stepMean, na.rm = TRUE))

summary(rd$static)

```

## Task 3

```{r}

rd_complete <- rd |> 
  filter(!is.na(static))

summary(rd_complete)

rd_complete |> ggplot(aes(X, Y)) +
    geom_path() +
    geom_point(aes( colour = static)) +
    coord_fixed() +
    theme(legend.position = "bottom")

```

## Task 4

```{r}

rle_id <- function(vec) {
    x <- rle(vec)$lengths
    as.factor(rep(seq_along(x), times = x))
}

rd_seg <- rd_complete |>
    mutate(segment_id = rle_id(static))

head(rd_seg)

rd_seg <- rd_seg |> 
  group_by(segment_id) |> 
  mutate(duration = (difftime(max(datetime), min(datetime), units = "hours")))
summary(rd_seg$duration)

rd_3plus <- rd_seg |> 
  filter(static == FALSE, duration >= 3) |> 
  mutate(dura_class = as.factor(case_when(duration < 3 ~ 3,
                                duration >= 3 & duration < 6  ~ 6,
                                duration >= 6 & duration < 9  ~ 9,
                                duration >= 9 & duration < 12  ~ 12,
                                duration >= 12 & duration < 15  ~ 15))) |> 
  mutate(dura_class = fct_relevel(dura_class, c("3", "6", "9", "12", "15")))

rd_3plus |> ggplot(aes(X, Y)) +
    geom_path() +
    geom_point(aes( colour = dura_class)) +
    coord_fixed() +
    theme(legend.position = "bottom")

```


